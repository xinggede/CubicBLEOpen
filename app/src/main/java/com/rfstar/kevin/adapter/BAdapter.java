package com.rfstar.kevin.adapter;import android.bluetooth.BluetoothDevice;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.TextView;import com.rfstar.kevin.R;import java.util.ArrayList;/** * @author kevin.wu */public class BAdapter extends BaseAdapter {    ArrayList<BluetoothDevice> arraySource;    private LayoutInflater factory;    private Context context;    public BAdapter(Context context, ArrayList<BluetoothDevice> arraySource) {        // TODO Auto-generated constructor stub        this.context = context;        this.arraySource = arraySource;        factory = LayoutInflater.from(this.context);    }    @Override    public int getCount() {        // TODO Auto-generated method stub        return arraySource.size();    }    @Override    public Object getItem(int position) {        // TODO Auto-generated method stub        return position;    }    @Override    public long getItemId(int position) {        // TODO Auto-generated method stub        return position;    }    @SuppressWarnings("static-access")    @Override    public View getView(int position, View convertView, ViewGroup parent) {        // TODO Auto-generated method stub        DeviceItem item = null;        if (convertView == null) {            convertView = factory.inflate(R.layout.listitem_device, null);            item = new DeviceItem();            item.deviceName = (TextView) convertView                    .findViewById(R.id.device_name);            item.deviceAddress = (TextView) convertView                    .findViewById(R.id.device_address);            convertView.setTag(item);        } else {            item = (DeviceItem) convertView.getTag();        }        BluetoothDevice device = arraySource.get(position);        String name = device.getName();        item.deviceName.setText(name);        item.deviceAddress.setText(device.getAddress());        return convertView;    }    private class DeviceItem {        TextView deviceName;        TextView deviceAddress;    }}